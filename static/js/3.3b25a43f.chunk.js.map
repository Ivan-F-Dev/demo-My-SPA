{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","components/Profile/ProfilePoster/ProfilePoster.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","images/poster.jpg","components/Profile/ProfilePoster/ProfilePoster.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","error","onSubmit","className","s","formSummaryError","dataOther","points","values","CreateField","required","Input","ProfileData","profile","isOwner","goToEditMode","dataOtherWrap","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","Object","keys","contacts","map","key","contactTitle","contactValue","onClick","ButtonCommon","color","text","Contact","ProfileInfo","savePhoto","saveProfile","Preloader","personWrap","statusAndId","userId","person","personImgWrap","personImg","src","photos","large","selectFileInput","type","target","files","length","personData","initialValues","formData","ProfilePoster","poster","Post","item","img","alt","message","like","maxLength10","maxLengthCreator","MyPosts","React","memo","console","log","postsElements","stateProfilePagePosts","p","likesCount","id","myPosts","MyPostsFormRedux","addPost","postsFormText","posts","wrap","action","wrapChild_1_form","Field","component","Textarea","name","placeholder","textarea","cols","rows","validate","wrapChild_2_button","MyPostsContainer","connect","state","profilePage","stateProfilePageNewPostText","newPostText","dispatch","Profile","ProfileContainer","refreshProfile","match","params","authorizedUserId","history","push","getProfileData","getStatus","this","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.3b25a43f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"personWrap\":\"ProfileInfo_personWrap__1okNS\",\"statusAndId\":\"ProfileInfo_statusAndId__133Jt\",\"person\":\"ProfileInfo_person__373Fa\",\"personImgWrap\":\"ProfileInfo_personImgWrap__2edIj\",\"personImg\":\"ProfileInfo_personImg__YFJfg\",\"selectFileInput\":\"ProfileInfo_selectFileInput__1aOKF\",\"personData\":\"ProfileInfo_personData__3J1s5\",\"dataName\":\"ProfileInfo_dataName__3qrLo\",\"dataOtherWrap\":\"ProfileInfo_dataOtherWrap__1IMPq\",\"dataOther\":\"ProfileInfo_dataOther__3bpqX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__32d2c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"poster\":\"ProfilePoster_poster__2WcMS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__iSAOE\",\"message\":\"Post_message__1MzCD\",\"img\":\"Post_img__N1ci_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__3PgHL\",\"wrap\":\"MyPosts_wrap__q5EAH\",\"wrapChild_1_form\":\"MyPosts_wrapChild_1_form__7oA04\",\"wrapChild_2_button\":\"MyPosts_wrapChild_2_button__Cqx2B\",\"textarea\":\"MyPosts_textarea__leu9I\",\"button\":\"MyPosts_button__1rMyC\"};","import React, {useEffect, useState} from 'react'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)//ВНИМАНИЕ ХУК!!!и присваивание его двух елементов\r\n    let [status, setStatus] = useState(props.status)//ВНИМАНИЕ ХУК!!!и присваивание его двух елементов\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    },[props.status])\r\n\r\n    const activateEditMode= () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode= () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                <span onDoubleClick={activateEditMode}>{status || \"--------------\"}</span>\r\n            </div>}\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\r\n                value={status}/>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks","import React from \"react\"\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport {CreateField, Input} from \"../../../common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {required} from \"../../../utils/validators/validators\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, error}) => {\r\n\r\n    return <form onSubmit={handleSubmit}>\r\n        <div><button>Save</button></div>\r\n        { error && <div className={s.formSummaryError}>{error}</div>}\r\n        <div className={s.dataOther}>\r\n            <div className={s.points}>\r\n                <div>fullName</div>\r\n                <div>aboutMe:</div>\r\n                <div>lookingForAJob:</div>\r\n                <div>lookingForAJobDescription:</div>\r\n                <div>facebook:</div>\r\n                <div>website:</div>\r\n                <div>vk:</div>\r\n                <div>twitter:</div>\r\n                <div>instagram:</div>\r\n                <div>youtube:</div>\r\n                <div>github:</div>\r\n                <div>mainLink:</div>\r\n            </div>\r\n            <div className={s.values}>\r\n                <div>{CreateField(\"Full name\", \"fullName\",required,Input,)}</div>\r\n                <div>{CreateField(\"About me\", \"aboutMe\",required,Input,)}</div>\r\n                <div>{CreateField(\"\", \"lookingForAJob\",required,Input, \"checkbox\")}</div>\r\n                <div>{CreateField(\"My professional skills\", \"lookingForAJobDescription\",required,Input,)}</div>\r\n                <div>{CreateField(\"Facebook\", \"contacts.facebook\",required,Input,)}</div>\r\n                <div>{CreateField(\"Website\", \"contacts.website\",required,Input,)}</div>\r\n                <div>{CreateField(\"VK\", \"contacts.vk\",required,Input,)}</div>\r\n                <div>{CreateField(\"Twitter\", \"contacts.twitter\",required,Input,)}</div>\r\n                <div>{CreateField(\"Instagram\", \"contacts.instagram\",required,Input,)}</div>\r\n                <div>{CreateField(\"Youtube\", \"contacts.youtube\",required,Input,)}</div>\r\n                <div>{CreateField(\"Github\", \"contacts.github\",required,Input,)}</div>\r\n                <div>{CreateField(\"MainLink\", \"contacts.mainLink\",required,Input,)}</div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form:'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm","import React, {Component, useState} from 'react';\r\nimport s from './ProfileInfo.module.css'\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatus/ProfileStatusWithHooks\";\r\nimport ProfileDateFormReduxForm from \"./ProfileDataForm\";\r\nimport ButtonCommon from \"../../../common/Buttons/ButtonCommon\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    let usersImgPlaceHolder = \"https://github.com/Ivan-F-Dev/imgs/blob/main/usersImgPlaceHolder.png?raw=true\"\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData);\r\n        setEditMode(false)\r\n    }\r\n\r\n    return <div className={s.personWrap}>\r\n        <div className={s.statusAndId}>\r\n            <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            <div>user ID: {profile.userId != null ? profile.userId : <span>...</span>}</div>\r\n        </div>\r\n\r\n        <div className={s.person}>\r\n            <div className={s.personImgWrap}>\r\n                <img className={s.personImg}\r\n                     src={profile.photos.large || usersImgPlaceHolder}/>\r\n                {isOwner && <input className={s.selectFileInput} type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n            </div>\r\n            <div className={s.personData}>\r\n                {editMode\r\n                    ? <ProfileDateFormReduxForm initialValues={profile} onSubmit={onSubmit} profile={profile}/>\r\n                    : <ProfileData goToEditMode={() => {\r\n                        setEditMode(true)\r\n                    }} profile={profile} isOwner={isOwner}/>}\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return <div className={s.dataOtherWrap}>\r\n        <b><i>Info</i></b>\r\n        <div className={s.dataOther}>\r\n            <div className={s.points}>\r\n                <div><b>fullName</b>:</div>\r\n                <div><b>aboutMe</b>:</div>\r\n                <div><b>lookingForAJob</b>:</div>\r\n                <div><b>lookingForAJobDescription</b>:</div>\r\n            </div>\r\n            <div className={s.values}>\r\n                <div>{profile.fullName != null ? profile.fullName : <span>...</span>}</div>\r\n                <div>{profile.aboutMe != null ? profile.aboutMe : <span>...</span>}</div>\r\n                <div>{profile.lookingForAJob == true ? <span>yes</span> : <span>no</span>}</div>\r\n                <div>{profile.lookingForAJobDescription != null ? profile.lookingForAJobDescription :\r\n                    <span>...</span>}</div>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <b><i>Contacts</i></b>\r\n            {Object.keys(profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n        {isOwner && <div onClick={goToEditMode}>\r\n            <ButtonCommon color={\"brown\"} text={\"Edit Mode On\"}/>\r\n        </div>}\r\n    </div>\r\n\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.dataOther}><div><b>{contactTitle}</b></div>:<div> {contactValue}</div></div>\r\n}\r\n\r\nexport default ProfileInfo;","export default __webpack_public_path__ + \"static/media/poster.d1476e1e.jpg\";","import React from 'react';\r\nimport s from './ProfilePoster.module.css'\r\nimport poster from '../../../images/poster.jpg'\r\n\r\nconst ProfilePoster = (props) => {\r\n    return(\r\n        <div>\r\n            <img className={s.poster} src={poster}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfilePoster;","import React, { Component } from 'react';\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n    <div className={s.item}>\r\n        <img className={s.img} src='https://github.com/Ivan-F-Dev/imgs/blob/main/Mando.jpg?raw=true' alt=\"\"/>\r\n        <div className={s.message}>{props.message}</div>\r\n        <div><span>like: {props.like}</span></div>\r\n    </div>\r\n    )            \r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport Post from './Post/Post'\r\nimport s from './MyPosts.module.css';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../../common/FormsControls/FormsControls\";\r\nimport ButtonCommon from \"../../../common/Buttons/ButtonCommon\";\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    console.log(\"MyPosts\");\r\n\r\n    let postsElements =\r\n        props.stateProfilePagePosts.map(p => <Post key={p.id} message={p.message} like={p.likesCount}/>);\r\n\r\n    let addNewPost = (values) => {\r\n        props.addPost(values.postsFormText);\r\n    };\r\n\r\n    return (\r\n        <div className={s.myPosts}>\r\n            <div>\r\n                <MyPostsFormRedux onSubmit={addNewPost}/>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nconst MyPostsForm = (props) => {\r\n    return <form className={s.wrap} onSubmit={props.handleSubmit} action=\"\">\r\n            <div className={s.wrapChild_1_form}>\r\n                <Field component={Textarea} name={\"postsFormText\"}\r\n                        placeholder={\"Post message\"} className={s.textarea}\r\n                        cols=\"\" rows=\"\" validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div className={s.wrapChild_2_button}>\r\n                <ButtonCommon color={\"brown\"} text={\"Add post\"}/>\r\n            </div>\r\n        </form>\r\n}\r\n\r\nconst MyPostsFormRedux = reduxForm ({form: \"profileAddNewPostForm\"}) (MyPostsForm)\r\n\r\nexport default MyPosts;","import React, {Component} from 'react';\r\nimport {addPost} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        stateProfilePagePosts: state.profilePage.posts,\r\n        stateProfilePageNewPostText: state.profilePage.newPostText,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (postsFormText) => {\r\n            dispatch(addPost(postsFormText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React, {Component} from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport s from './Profile.module.css'\r\nimport ProfilePoster from \"./ProfilePoster/ProfilePoster\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    console.log(\"Profile\");\r\n    return (\r\n        <div className={s.profile}>\r\n            <ProfilePoster />\r\n            <ProfileInfo saveProfile={props.saveProfile} savePhoto={props.savePhoto} profile={props.profile} status={props.status} updateStatus={props.updateStatus} isOwner={props.isOwner}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React, {Component} from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfileData, getStatus, savePhoto, updateStatus, saveProfile} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile = () => {\r\n        let userId = this.props.match.params.userId;\r\n        if(!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getProfileData(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props} isOwner={!this.props.match.params.userId}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n/*status={this.props.status} updateStatus={this.props.updateStatus}*/\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile : state.profilePage.profile,\r\n    status : state.profilePage.status,\r\n    authorizedUserId : state.auth.userId,\r\n    isAuth : state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n    connect (mapStateToProps, {getProfileData, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n)(ProfileContainer)\r\n\r\n"],"sourceRoot":""}