{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","components/Profile/ProfilePoster/ProfilePoster.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","images/poster.jpg","components/Profile/ProfilePoster/ProfilePoster.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","className","s","person","personImgWrap","personImg","src","photos","large","personData","dataName","fullName","dataOther","points","values","userId","lookingForAJob","lookingForAJobDescription","aboutMe","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","Preloader","ProfilePoster","poster","Post","item","img","alt","message","like","maxLength10","maxLengthCreator","MyPosts","React","memo","console","log","postsElements","stateProfilePagePosts","map","p","likesCount","id","myPosts","MyPostsFormRedux","onSubmit","addPost","postsFormText","posts","reduxForm","form","wrap","handleSubmit","action","Field","component","Textarea","name","placeholder","textarea","cols","rows","validate","required","button","MyPostsContainer","connect","state","profilePage","stateProfilePageNewPostText","newPostText","dispatch","Profile","ProfileContainer","this","match","params","authorizedUserId","history","push","getProfileData","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,OAAS,4BAA4B,cAAgB,mCAAmC,UAAY,+BAA+B,WAAa,gCAAgC,SAAW,8BAA8B,UAAY,+BAA+B,OAAS,4BAA4B,OAAS,8B,oBCApUD,EAAOC,QAAU,CAAC,QAAU,2B,oBCA5BD,EAAOC,QAAU,CAAC,OAAS,gC,oBCA3BD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,QAAU,sBAAsB,IAAM,oB,oBCAlFD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,KAAO,sBAAsB,SAAW,0BAA0B,OAAS,wBAAwB,MAAQ,yB,qJCmCjJC,EAlCgB,SAACC,GAAW,IAAD,EAERC,oBAAS,GAFD,mBAEjCC,EAFiC,KAEvBC,EAFuB,OAGZF,mBAASD,EAAMI,QAHH,mBAGjCA,EAHiC,KAGzBC,EAHyB,KAKtCC,qBAAU,WACND,EAAUL,EAAMI,UAClB,CAACJ,EAAMI,SAYT,OACI,iCACMF,GACE,8BACA,sBAAMK,cAdM,WACpBJ,GAAY,IAaJ,SAAwCC,GAAU,qBAErDF,GACD,8BACI,uBAAOM,SAXI,SAACC,GACpBJ,EAAUI,EAAEC,cAAcC,QAUeC,WAAW,EAAMC,OAfpC,WACtBV,GAAY,GACZH,EAAMc,aAAaV,IAcXO,MAAOP,UCsCRW,EA/DK,SAAC,GAA6C,IAA5CC,EAA2C,EAA3CA,QAAQZ,EAAmC,EAAnCA,OAAOU,EAA4B,EAA5BA,aAA4B,mDAI7D,OAAKE,EAKD,sBAAKC,UAAWC,IAAEC,OAAlB,UACI,qBAAKF,UAAWC,IAAEE,cAAlB,SACI,qBAAKH,UAAWC,IAAEG,UACbC,IAA6B,MAAxBN,EAAQO,OAAOC,MACdR,EAAQO,OAAOC,MAXnB,sEAcX,sBAAKP,UAAWC,IAAEO,WAAlB,UAGI,cAAC,EAAD,CAAwBrB,OAAQA,EAAQU,aAAcA,IAGtD,qBAAKG,UAAWC,IAAEQ,SAAlB,SAC0B,MAApBV,EAAQW,SAAmBX,EAAQW,SAAW,gDAGpD,sBAAKV,UAAWC,IAAEU,UAAlB,UACI,sBAAKX,UAAWC,IAAEW,OAAlB,UACI,2CACA,kDACA,6DACA,4CACA,+BAAM,2CACN,6CACA,4CACA,uCACA,4CACA,8CACA,4CACA,2CACA,gDAEJ,sBAAKZ,UAAWC,IAAEY,OAAlB,UACI,8BAAyB,MAAlBd,EAAQe,OAAiBf,EAAQe,OAAS,yCACjD,8BAAiC,GAA1Bf,EAAQgB,eAAyB,wCAAoB,2CAC5D,8BAA4C,MAArChB,EAAQiB,0BAAoCjB,EAAQiB,0BAA4B,yCACvF,8BAA0B,MAAnBjB,EAAQkB,QAAkBlB,EAAQkB,QAAU,yCACnD,2DACA,8BAAoC,MAA7BlB,EAAQmB,SAASC,SAAmBpB,EAAQmB,SAASC,SAAW,yCACvE,8BAAmC,MAA5BpB,EAAQmB,SAASE,QAAkBrB,EAAQmB,SAASE,QAAU,yCACrE,8BAA8B,MAAvBrB,EAAQmB,SAASG,GAAatB,EAAQmB,SAASG,GAAK,yCAC3D,8BAAmC,MAA5BtB,EAAQmB,SAASI,QAAkBvB,EAAQmB,SAASI,QAAU,yCACrE,8BAAqC,MAA9BvB,EAAQmB,SAASK,UAAoBxB,EAAQmB,SAASK,UAAY,yCACzE,8BAAmC,MAA5BxB,EAAQmB,SAASM,QAAkBzB,EAAQmB,SAASM,QAAU,yCACrE,8BAAkC,MAA3BzB,EAAQmB,SAASO,OAAiB1B,EAAQmB,SAASO,OAAS,yCACnE,8BAAoC,MAA7B1B,EAAQmB,SAASQ,SAAmB3B,EAAQmB,SAASQ,SAAW,qDAlDxF,cAACC,EAAA,EAAD,K,oCCVQ,MAA0B,mCCY1BC,EARO,SAAC7C,GACnB,OACI,8BACI,qBAAKiB,UAAWC,IAAE4B,OAAQxB,IAAKwB,O,0BCM5BC,EAVF,SAAC/C,GACV,OACA,sBAAKiB,UAAWC,IAAE8B,KAAlB,UACI,qBAAK/B,UAAWC,IAAE+B,IAAK3B,IAAI,kEAAkE4B,IAAI,KACjG,qBAAKjC,UAAWC,IAAEiC,QAAlB,SAA4BnD,EAAMmD,UAClC,8BAAK,0CAAanD,EAAMoD,c,mDCD1BC,EAAcC,YAAiB,IAE/BC,EAAUC,IAAMC,MAAK,SAAAzD,GAEvB0D,QAAQC,IAAI,WAEZ,IAAIC,EACA5D,EAAM6D,sBAAsBC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAiBZ,QAASY,EAAEZ,QAASC,KAAMW,EAAEC,YAAlCD,EAAEE,OAMtD,OACI,sBAAKhD,UAAWC,IAAEgD,QAAlB,UACI,8BACI,cAACC,EAAD,CAAkBC,SAPb,SAACtC,GACd9B,EAAMqE,QAAQvC,EAAOwC,oBAQjB,qBAAKrD,UAAWC,IAAEqD,MAAlB,SACKX,UAiBXO,EAAmBK,YAAW,CAACC,KAAM,yBAAlBD,EAXL,SAACxE,GACjB,OACI,uBAAMiB,UAAWC,IAAEwD,KAAMN,SAAUpE,EAAM2E,aAAcC,OAAO,GAA9D,UACI,8BAAK,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,KAAM,gBAC3BC,YAAa,eAAgBhE,UAAWC,IAAEgE,SAC1CC,KAAK,KAAKC,KAAK,IAAIC,SAAU,CAACC,IAAUjC,OACpD,8BAAK,wBAAQpC,UAAWC,IAAEqE,OAArB,8BAOFhC,I,QCvBAiC,EAFUC,aAfH,SAACC,GACnB,MAAO,CACH7B,sBAAuB6B,EAAMC,YAAYpB,MACzCqB,4BAA6BF,EAAMC,YAAYE,gBAI9B,SAACC,GACtB,MAAO,CACHzB,QAAS,SAACC,GACNwB,EAASzB,YAAQC,QAKJmB,CAA6ClC,GCHvDwC,EAXC,SAAC/F,GAEb,OADA0D,QAAQC,IAAI,WAER,sBAAK1C,UAAWC,IAAEF,QAAlB,UACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAaA,QAAShB,EAAMgB,QAASZ,OAAQJ,EAAMI,OAAQU,aAAcd,EAAMc,eAC/E,cAAC,EAAD,Q,eCLNkF,E,kLAEE,IAAIjE,EAASkE,KAAKjG,MAAMkG,MAAMC,OAAOpE,OACjCA,IACAA,EAASkE,KAAKjG,MAAMoG,mBAEhBH,KAAKjG,MAAMqG,QAAQC,KAAK,UAGhCL,KAAKjG,MAAMuG,eAAexE,GAC1BkE,KAAKjG,MAAMwG,UAAUzE,K,+BAGrB,OACI,8BACI,cAAC,EAAD,2BAAakE,KAAKjG,OAAlB,IAAyBI,OAAQ6F,KAAKjG,MAAMI,OAAQU,aAAcmF,KAAKjG,MAAMc,sB,GAf9D0C,IAAMiD,WA4BtBC,sBACXjB,aARkB,SAACC,GAAD,MAAY,CAC9B1E,QAAU0E,EAAMC,YAAY3E,QAC5BZ,OAASsF,EAAMC,YAAYvF,OAC3BgG,iBAAmBV,EAAMiB,KAAK5E,OAC9B6E,OAASlB,EAAMiB,KAAKC,UAIM,CAACL,mBAAgBC,cAAW1F,mBACtD+F,IAFWH,CAGbV","file":"static/js/3.c4787f4e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"person\":\"ProfileInfo_person__373Fa\",\"personImgWrap\":\"ProfileInfo_personImgWrap__2edIj\",\"personImg\":\"ProfileInfo_personImg__YFJfg\",\"personData\":\"ProfileInfo_personData__3J1s5\",\"dataName\":\"ProfileInfo_dataName__3qrLo\",\"dataOther\":\"ProfileInfo_dataOther__3bpqX\",\"points\":\"ProfileInfo_points__2wf8B\",\"values\":\"ProfileInfo_values__2DEVo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__32d2c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"poster\":\"ProfilePoster_poster__2WcMS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__iSAOE\",\"message\":\"Post_message__1MzCD\",\"img\":\"Post_img__N1ci_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__3PgHL\",\"wrap\":\"MyPosts_wrap__q5EAH\",\"textarea\":\"MyPosts_textarea__leu9I\",\"button\":\"MyPosts_button__1rMyC\",\"posts\":\"MyPosts_posts__2G-Zn\"};","import React, {useEffect, useState} from 'react'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)//ВНИМАНИЕ ХУК!!!и присваивание его двух елементов\r\n    let [status, setStatus] = useState(props.status)//ВНИМАНИЕ ХУК!!!и присваивание его двух елементов\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    },[props.status])\r\n\r\n    const activateEditMode= () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode= () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                <span onDoubleClick={activateEditMode}>{status || \"--------------\"}</span>\r\n            </div>}\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\r\n                value={status}/>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks","import React, {Component} from 'react';\r\nimport s from './ProfileInfo.module.css'\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatus/ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile,status,updateStatus, ...props}) => {\r\n\r\n    const MandoPhoto = 'https://github.com/Ivan-F-Dev/imgs/blob/main/Mando.jpg?raw=true';\r\n\r\n    if (!profile) {\r\nreturn <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div className={s.person}>\r\n            <div className={s.personImgWrap}>\r\n                <img className={s.personImg}\r\n                     src={profile.photos.large != null\r\n                         ? profile.photos.large\r\n                         : MandoPhoto}/>\r\n            </div>\r\n            <div className={s.personData}>\r\n\r\n\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n\r\n\r\n                <div className={s.dataName}>\r\n                    { profile.fullName != null ? profile.fullName : <span>Din Jarren</span> }\r\n\r\n                </div>\r\n                <div className={s.dataOther}>\r\n                    <div className={s.points}>\r\n                        <div>user ID:</div>\r\n                        <div>lookingForAJob:</div>\r\n                        <div>lookingForAJobDescription:</div>\r\n                        <div>aboutMe: </div>\r\n                        <span><b>Contacts</b></span>\r\n                        <div>facebook: </div>\r\n                        <div>website: </div>\r\n                        <div>vk: </div>\r\n                        <div>twitter: </div>\r\n                        <div>instagram: </div>\r\n                        <div>youtube: </div>\r\n                        <div>github: </div>\r\n                        <div>mainLink: </div>\r\n                    </div>\r\n                    <div className={s.values}>\r\n                        <div>{ profile.userId != null ? profile.userId : <span>...</span> }</div>\r\n                        <div>{ profile.lookingForAJob == true ? <span>true</span> : <span>false</span> }</div>\r\n                        <div>{ profile.lookingForAJobDescription != null ? profile.lookingForAJobDescription : <span>...</span> }</div>\r\n                        <div>{ profile.aboutMe != null ? profile.aboutMe : <span>...</span> }</div>\r\n                        <div>________________________</div>\r\n                        <div>{ profile.contacts.facebook != null ? profile.contacts.facebook : <span>...</span> }</div>\r\n                        <div>{ profile.contacts.website != null ? profile.contacts.website : <span>...</span> }</div>\r\n                        <div>{ profile.contacts.vk != null ? profile.contacts.vk : <span>...</span> }</div>\r\n                        <div>{ profile.contacts.twitter != null ? profile.contacts.twitter : <span>...</span> }</div>\r\n                        <div>{ profile.contacts.instagram != null ? profile.contacts.instagram : <span>...</span> }</div>\r\n                        <div>{ profile.contacts.youtube != null ? profile.contacts.youtube : <span>...</span> }</div>\r\n                        <div>{ profile.contacts.github != null ? profile.contacts.github : <span>...</span> }</div>\r\n                        <div>{ profile.contacts.mainLink != null ? profile.contacts.mainLink : <span>...</span> }</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","export default __webpack_public_path__ + \"static/media/poster.d1476e1e.jpg\";","import React from 'react';\r\nimport s from './ProfilePoster.module.css'\r\nimport poster from '../../../images/poster.jpg'\r\n\r\nconst ProfilePoster = (props) => {\r\n    return(\r\n        <div>\r\n            <img className={s.poster} src={poster}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfilePoster;","import React, { Component } from 'react';\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n    <div className={s.item}>\r\n        <img className={s.img} src='https://github.com/Ivan-F-Dev/imgs/blob/main/Mando.jpg?raw=true' alt=\"\"/>\r\n        <div className={s.message}>{props.message}</div>\r\n        <div><span>like: {props.like}</span></div>\r\n    </div>\r\n    )            \r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport Post from './Post/Post'\r\nimport s from './MyPosts.module.css';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    console.log(\"MyPosts\");\r\n\r\n    let postsElements =\r\n        props.stateProfilePagePosts.map(p => <Post key={p.id} message={p.message} like={p.likesCount}/>);\r\n\r\n    let addNewPost = (values) => {\r\n        props.addPost(values.postsFormText);\r\n    };\r\n\r\n    return (\r\n        <div className={s.myPosts}>\r\n            <div>\r\n                <MyPostsFormRedux onSubmit={addNewPost}/>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nconst MyPostsForm = (props) => {\r\n    return (\r\n        <form className={s.wrap} onSubmit={props.handleSubmit} action=\"\">\r\n            <div><Field component={Textarea} name={\"postsFormText\"}\r\n                        placeholder={\"Post message\"} className={s.textarea}\r\n                        cols=\"70\" rows=\"2\" validate={[required, maxLength10]}/></div>\r\n            <div><button className={s.button}>Add post</button></div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst MyPostsFormRedux = reduxForm ({form: \"profileAddNewPostForm\"}) (MyPostsForm)\r\n\r\nexport default MyPosts;","import React, {Component} from 'react';\r\nimport {addPost} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        stateProfilePagePosts: state.profilePage.posts,\r\n        stateProfilePageNewPostText: state.profilePage.newPostText,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (postsFormText) => {\r\n            dispatch(addPost(postsFormText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React, {Component} from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport s from './Profile.module.css'\r\nimport ProfilePoster from \"./ProfilePoster/ProfilePoster\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    console.log(\"Profile\");\r\n    return (\r\n        <div className={s.profile}>\r\n            <ProfilePoster />\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React, {Component} from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfileData, getStatus, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if(!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getProfileData(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile : state.profilePage.profile,\r\n    status : state.profilePage.status,\r\n    authorizedUserId : state.auth.userId,\r\n    isAuth : state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n    connect (mapStateToProps, {getProfileData, getStatus, updateStatus }),\r\n    withRouter,\r\n)(ProfileContainer)\r\n\r\n"],"sourceRoot":""}