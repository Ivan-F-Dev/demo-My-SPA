{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","activeClassName","s","dialogItemActive","className","dialogItem","dialog","dialogActive","to","id","name","img","src","url","alt","Message","message","answer","messageAnswers","answerImg","maxLength10","maxLengthCreator","DialogsFormRedux","reduxForm","form","onSubmit","handleSubmit","action","Field","textarea","component","Textarea","placeholder","validate","required","button","Dialogs","dialogsElements","dialogsPage","dialogs","map","d","messagesElements","messages","m","dialogsItems","write","values","addMessage","newMessageText","mapStateToPropsForRedirect","state","isAuth","auth","compose","connect","dispatch","addMessageActionCreator","Component","RedirectComponent","this","React"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,SAAW,0BAA0B,MAAQ,uBAAuB,KAAO,sBAAsB,SAAW,0BAA0B,OAAS,0B,oBCAjPD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,OAAS,2BAA2B,aAAe,iCAAiC,IAAM,0B,oBCAxJD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,KAAO,sBAAsB,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,UAAY,2BAA2B,eAAiB,kC,wHCY1OC,EATI,SAACC,GAChB,OACI,sBAAKC,gBAAiBC,IAAEC,iBAAkBC,UAAWF,IAAEG,WAAvD,UACI,cAAC,IAAD,CAASD,UAAWF,IAAEI,OAAQL,gBAAiBC,IAAEK,aAAeC,GAAI,YAAcR,EAAMS,GAAxF,SAA6FT,EAAMU,OACnG,qBAAKN,UAAWF,IAAES,IAAKC,IAAKZ,EAAMa,IAAKC,IAAI,S,kBCSxCC,EAdC,SAACf,GAEb,OACI,qBAAKI,UAAWF,IAAEc,QAAlB,SACI,sBAAKZ,UAAWF,IAAEe,OAAlB,UACI,qBAAKb,UAAWF,IAAEgB,eAAlB,SAAmClB,EAAMgB,UACzC,qBAAKZ,UAAWF,IAAEiB,UAAWP,IAAI,kEAC5BE,IAAI,W,iCCFnBM,EAAcC,YAAiB,IAsC/BC,EAAmBC,YAAU,CAACC,KAAM,eAAjBD,EAdL,SAACvB,GACjB,OACI,uBAAMI,UAAWF,IAAEsB,KAAMC,SAAUzB,EAAM0B,aAAcC,OAAO,GAA9D,UACI,8BACI,cAACC,EAAA,EAAD,CAAOxB,UAAWF,IAAE2B,SAAUC,UAAWC,IAAUrB,KAAM,iBAClDsB,YAAa,qBAAsBC,SAAU,CAACC,IAAUd,OAEnE,8BACI,wBAAQhB,UAAWF,IAAEiC,OAArB,0BAQDC,EAtCC,SAACpC,GACb,IAAIqC,EACArC,EAAMsC,YAAYC,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAY5B,IAAK4B,EAAE5B,IAAKH,KAAM+B,EAAE/B,KAAiBD,GAAIgC,EAAEhC,IAAZgC,EAAEhC,OAChFiC,EACA1C,EAAMsC,YAAYK,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAoB5B,QAAS4B,EAAE5B,SAAjB4B,EAAEnC,OAIxD,OACI,sBAAKL,UAAWF,IAAEqC,QAAlB,UACI,qBAAKnC,UAAWF,IAAE2C,aAAlB,SACKR,IAEL,sBAAKjC,UAAWF,IAAEyC,SAAlB,UACKD,EACD,qBAAKtC,UAAWF,IAAE4C,MAAlB,SACI,cAACxB,EAAD,CAAkBG,SAXd,SAACsB,GACjB/C,EAAMgD,WAAWD,EAAOE,4B,uDCZ5BC,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,S,OCiBPE,sBACZC,aAfkB,SAACJ,GACnB,MAAO,CACHb,YAAaa,EAAMb,gBAIF,SAACkB,GACtB,MAAO,CACHR,WAAY,SAACC,GACTO,EAASC,YAAwBR,UDTb,SAACS,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAK5D,MAAMoD,OACT,cAACM,EAAD,eAAeE,KAAK5D,QADK,cAAC,IAAD,CAAUQ,GAAI,eAHX,GACXqD,IAAMH,WAQtC,OADIH,YAAQL,EAARK,CAAqCI,KCM7BL,CAGdlB","file":"static/js/4.47a55234.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1lzgY\",\"dialogsItems\":\"Dialogs_dialogsItems__3XCNi\",\"messages\":\"Dialogs_messages__CRBmy\",\"write\":\"Dialogs_write__3kHt3\",\"form\":\"Dialogs_form__T74mv\",\"textarea\":\"Dialogs_textarea__1FK_q\",\"button\":\"Dialogs_button__HkIIY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogItem\":\"DialogItem_dialogItem__2KBQ6\",\"dialog\":\"DialogItem_dialog__2Jq8s\",\"dialogActive\":\"DialogItem_dialogActive__3GAkN\",\"img\":\"DialogItem_img__14-EK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__HYTcH\",\"from\":\"Message_from__2I2v9\",\"fromImg\":\"Message_fromImg__2QQo3\",\"messageFrom\":\"Message_messageFrom__fq0DM\",\"answer\":\"Message_answer__fnTaL\",\"answerImg\":\"Message_answerImg__29ZkH\",\"messageAnswers\":\"Message_messageAnswers__1uDrg\"};","import React, {Component} from 'react';\r\nimport s from './DialogItem.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div activeClassName={s.dialogItemActive} className={s.dialogItem}>\r\n            <NavLink className={s.dialog} activeClassName={s.dialogActive}  to={'/dialogs/' + props.id}>{props.name}</NavLink>\r\n            <img className={s.img} src={props.url} alt=\"\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React, {Component} from 'react';\r\nimport s from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n\r\n    return (\r\n        <div className={s.message}>\r\n            <div className={s.answer}>\r\n                <div className={s.messageAnswers}>{props.message}</div>\r\n                <img className={s.answerImg} src=\"https://github.com/Ivan-F-Dev/imgs/blob/main/Mando.jpg?raw=true\"\r\n                     alt=\"\"/>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Message;","import React, {Component} from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogsElements =\r\n        props.dialogsPage.dialogs.map(d => <DialogItem url={d.url} name={d.name} key={d.id} id={d.id}/>);\r\n    let messagesElements =\r\n        props.dialogsPage.messages.map(m => <Message key={m.id} message={m.message}/>);\r\n    let addNewMessage = (values) => {\r\n        props.addMessage(values.newMessageText)\r\n    }\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n                <div className={s.write}>\r\n                    <DialogsFormRedux onSubmit={addNewMessage}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst DialogsForm = (props) => {\r\n    return (\r\n        <form className={s.form} onSubmit={props.handleSubmit} action=\"\">\r\n            <div>\r\n                <Field className={s.textarea} component={Textarea} name={\"newMessageText\"}\r\n                       placeholder={\"Enter your message\"} validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button className={s.button}>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst DialogsFormRedux = reduxForm({form: \"dialogsForm\"})(DialogsForm)\r\n\r\nexport default Dialogs;","import React from 'react'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) {return <Redirect to={\"/login\"} />}\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent =\r\n        connect(mapStateToPropsForRedirect) (RedirectComponent)\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React, {Component} from 'react';\r\nimport {addMessageActionCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (newMessageText) => {\r\n            dispatch(addMessageActionCreator(newMessageText))\r\n        },\r\n    }\r\n}\r\n\r\nexport  default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)\r\n"],"sourceRoot":""}